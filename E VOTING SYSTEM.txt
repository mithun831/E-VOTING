import java.util.Scanner;

class Candidate {
    String name;
    int votes;

    Candidate(String name) {
        this.name = name;
        this.votes = 0;
    }

    void vote() {
        votes++;
    }
}

public class EVotingSystem {
    static Candidate[] candidates;
    static String[] votedUsers;  // to prevent multiple votes
    static int userCount = 0;

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Step 1: Initialize Candidates
        candidates = new Candidate[3];
        candidates[0] = new Candidate("Alice");
        candidates[1] = new Candidate("Bob");
        candidates[2] = new Candidate("Charlie");

        votedUsers = new String[100];

        int choice;
        do {
            System.out.println("\n--- E-Voting System ---");
            System.out.println("1. Vote");
            System.out.println("2. View Vote Count");
            System.out.println("3. Declare Winner");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            choice = sc.nextInt();
            sc.nextLine(); // consume newline

            switch (choice) {
                case 1:
                    System.out.print("Enter your Voter ID: ");
                    String voterId = sc.nextLine();

                    if (hasVoted(voterId)) {
                        System.out.println("You have already voted!");
                    } else {
                        displayCandidates();
                        System.out.print("Enter candidate number to vote: ");
                        int vote = sc.nextInt();
                        sc.nextLine();

                        if (vote >= 1 && vote <= candidates.length) {
                            candidates[vote - 1].vote();
                            votedUsers[userCount++] = voterId;
                            System.out.println("Vote recorded successfully!");
                        } else {
                            System.out.println("Invalid candidate number.");
                        }
                    }
                    break;

                case 2:
                    displayVoteCounts();
                    break;

                case 3:
                    declareWinner();
                    break;

                case 4:
                    System.out.println("Thank you for using E-Voting System.");
                    break;

                default:
                    System.out.println("Invalid choice. Try again.");
            }

        } while (choice != 4);

        sc.close();
    }

    static void displayCandidates() {
        System.out.println("Candidates:");
        for (int i = 0; i < candidates.length; i++) {
            System.out.println((i + 1) + ". " + candidates[i].name);
        }
    }

    static void displayVoteCounts() {
        System.out.println("\n--- Vote Count ---");
        for (Candidate c : candidates) {
            System.out.println(c.name + ": " + c.votes + " vote(s)");
        }
    }

    static void declareWinner() {
        int maxVotes = -1;
        String winner = "No winner";

        for (Candidate c : candidates) {
            if (c.votes > maxVotes) {
                maxVotes = c.votes;
                winner = c.name;
            }
        }

        System.out.println("\nWinner is: " + winner + " with " + maxVotes + " votes!");
    }

    static boolean hasVoted(String voterId) {
        for (int i = 0; i < userCount; i++) {
            if (votedUsers[i].equalsIgnoreCase(voterId)) {
                return true;
            }
        }
        return false;
    }
}
